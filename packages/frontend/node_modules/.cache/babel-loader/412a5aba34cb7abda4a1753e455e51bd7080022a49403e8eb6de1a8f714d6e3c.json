{"ast":null,"code":"var _jsxFileName = \"/Users/treymartin/csc-307-teamApp/CSC-307-TA/packages/frontend/src/components/Leaderboard.jsx\";\n// src/components/Leaderboard.jsx\nimport React from 'react';\n\n/**\n * Leaderboard Component\n * Displays user rankings based on points\n * THIS CURRENTLY USES MOCK DATA\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Leaderboard = () => {\n  // Mock data for leaderboard, replace with database once implemented\n  // User ID should be randomly generated and unique\n  // Eventually, names should be clickable and completed tasks for that user should be displayed\n  const mockUsers = [{\n    id: 1,\n    username: 'TaskMasterTester',\n    points: 2500,\n    rank: 1\n  }, {\n    id: 2,\n    username: 'ProductivityPro',\n    points: 2200,\n    rank: 2\n  }, {\n    id: 3,\n    username: 'GoalGarry',\n    points: 1800,\n    rank: 3\n  }, {\n    id: 4,\n    username: 'AchievementAndy',\n    points: 1600,\n    rank: 4\n  }, {\n    id: 5,\n    username: 'User',\n    points: 150,\n    rank: 5\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"leaderboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard-list\",\n      children: mockUsers.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leaderboard-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rank\",\n          children: [\"#\", user.rank]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"username\",\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"points\",\n          children: [user.points, \" pts\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Leaderboard","mockUsers","id","username","points","rank","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","_c","$RefreshReg$"],"sources":["/Users/treymartin/csc-307-teamApp/CSC-307-TA/packages/frontend/src/components/Leaderboard.jsx"],"sourcesContent":["// src/components/Leaderboard.jsx\nimport React from 'react'\n\n/**\n * Leaderboard Component\n * Displays user rankings based on points\n * THIS CURRENTLY USES MOCK DATA\n */\n\nconst Leaderboard = () => {\n    // Mock data for leaderboard, replace with database once implemented\n    // User ID should be randomly generated and unique\n    // Eventually, names should be clickable and completed tasks for that user should be displayed\n    const mockUsers = [\n        { id: 1, username: 'TaskMasterTester', points: 2500, rank: 1 },\n        { id: 2, username: 'ProductivityPro', points: 2200, rank: 2 },\n        { id: 3, username: 'GoalGarry', points: 1800, rank: 3 },\n        { id: 4, username: 'AchievementAndy', points: 1600, rank: 4 },\n        { id: 5, username: 'User', points: 150, rank: 5 },\n    ]\n\n    return (\n        <div className=\"leaderboard\">\n            <h2>Leaderboard</h2>\n            <div className=\"leaderboard-list\">\n                {mockUsers.map((user) => (\n                    <div key={user.id} className=\"leaderboard-item\">\n                        <div className=\"rank\">#{user.rank}</div>\n                        <div className=\"username\">{user.username}</div>\n                        <div className=\"points\">{user.points} pts</div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Leaderboard\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AAJA,SAAAC,MAAA,IAAAC,OAAA;AAMA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACtB;EACA;EACA;EACA,MAAMC,SAAS,GAAG,CACd;IAAEC,EAAE,EAAE,CAAC;IAAEC,QAAQ,EAAE,kBAAkB;IAAEC,MAAM,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAE,CAAC,EAC9D;IAAEH,EAAE,EAAE,CAAC;IAAEC,QAAQ,EAAE,iBAAiB;IAAEC,MAAM,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAE,CAAC,EAC7D;IAAEH,EAAE,EAAE,CAAC;IAAEC,QAAQ,EAAE,WAAW;IAAEC,MAAM,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAE,CAAC,EACvD;IAAEH,EAAE,EAAE,CAAC;IAAEC,QAAQ,EAAE,iBAAiB;IAAEC,MAAM,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAE,CAAC,EAC7D;IAAEH,EAAE,EAAE,CAAC;IAAEC,QAAQ,EAAE,MAAM;IAAEC,MAAM,EAAE,GAAG;IAAEC,IAAI,EAAE;EAAE,CAAC,CACpD;EAED,oBACIN,OAAA;IAAKO,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACxBR,OAAA;MAAAQ,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBZ,OAAA;MAAKO,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC5BN,SAAS,CAACW,GAAG,CAAEC,IAAI,iBAChBd,OAAA;QAAmBO,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC3CR,OAAA;UAAKO,SAAS,EAAC,MAAM;UAAAC,QAAA,GAAC,GAAC,EAACM,IAAI,CAACR,IAAI;QAAA;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACxCZ,OAAA;UAAKO,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAEM,IAAI,CAACV;QAAQ;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC/CZ,OAAA;UAAKO,SAAS,EAAC,QAAQ;UAAAC,QAAA,GAAEM,IAAI,CAACT,MAAM,EAAC,MAAI;QAAA;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAHzCE,IAAI,CAACX,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIZ,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAG,EAAA,GA1BKd,WAAW;AA4BjB,eAAeA,WAAW;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}