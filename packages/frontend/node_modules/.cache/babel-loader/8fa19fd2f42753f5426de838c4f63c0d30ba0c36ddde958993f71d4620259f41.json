{"ast":null,"code":"var _jsxFileName = \"/Users/treymartin/csc-307-teamApp/CSC-307-TA/packages/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\n// src/App.jsx\nimport React, { useState } from 'react';\nimport TaskList from './components/TaskList';\nimport TaskAdd from './components/TaskAdd';\nimport Calendar from './components/Calendar';\nimport Navigation from './components/Navigation';\nimport Welcome from './components/Welcome';\nimport Leaderboard from './components/Leaderboard';\nimport Login from './components/Login';\nimport './App.css';\nimport Signup from './components/Signup';\n\n/**\n * Main App Component\n * Manages the application state and renders the main UI\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State management for tasks and UI\n  const [tasks, setTasks] = useState([]); // Stores all tasks\n  const [currentView, setCurrentView] = useState('login'); // Controls which view is displayed\n  const [selectedDate, setSelectedDate] = useState(new Date()); // Selected date for calendar\n\n  //Adds a new task to the tasks array\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [username, setUsername] = useState(''); // eslint-disable-line no-unused-vars\n\n  const addTask = taskText => {\n    if (taskText.trim()) {\n      setTasks([...tasks, {\n        id: Date.now(),\n        text: taskText,\n        completed: false,\n        date: selectedDate,\n        points: 10 // Default points value\n      }]);\n    }\n  };\n\n  /**\n   * Toggles the completion status of a task\n   */\n  const toggleTask = id => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n  const handleLoginSuccess = () => {\n    setIsLoggedIn(true);\n    setCurrentView('welcome'); // Switch to main content on successful login\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TaskArena\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        currentView: currentView,\n        setCurrentView: setCurrentView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [currentView === 'welcome' && /*#__PURE__*/_jsxDEV(Welcome, {\n          setCurrentView: setCurrentView,\n          username: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), currentView === 'tasks' && /*#__PURE__*/_jsxDEV(TaskList, {\n          tasks: tasks,\n          toggleTask: toggleTask,\n          setCurrentView: setCurrentView\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), currentView === 'add' && /*#__PURE__*/_jsxDEV(TaskAdd, {\n          addTask: addTask,\n          setCurrentView: setCurrentView\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), currentView === 'calendar' && /*#__PURE__*/_jsxDEV(Calendar, {\n          selectedDate: selectedDate,\n          setSelectedDate: setSelectedDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), currentView === 'leaderboard' && /*#__PURE__*/_jsxDEV(Leaderboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 55\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  };\n  function CloseForm() {\n    setIsLoggedIn(false);\n    setCurrentView('login'); // Switch to main content on successful login\n  }\n  function handleSignup() {\n    setCurrentView('signup');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: isLoggedIn ?\n    /*#__PURE__*/\n    // Main app content after login\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TaskArena\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        currentView: currentView,\n        setCurrentView: setCurrentView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [currentView === 'welcome' && /*#__PURE__*/_jsxDEV(Welcome, {\n          setCurrentView: setCurrentView,\n          username: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }, this), currentView === 'tasks' && /*#__PURE__*/_jsxDEV(TaskList, {\n          tasks: tasks,\n          toggleTask: toggleTask,\n          setCurrentView: setCurrentView\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }, this), currentView === 'add' && /*#__PURE__*/_jsxDEV(TaskAdd, {\n          addTask: addTask,\n          setCurrentView: setCurrentView\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }, this), currentView === 'calendar' && /*#__PURE__*/_jsxDEV(Calendar, {\n          selectedDate: selectedDate,\n          setSelectedDate: setSelectedDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 29\n        }, this), currentView === 'leaderboard' && /*#__PURE__*/_jsxDEV(Leaderboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 59\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this) :\n    /*#__PURE__*/\n    // Login/Signup forms\n    _jsxDEV(_Fragment, {\n      children: currentView === 'login' ? /*#__PURE__*/_jsxDEV(Login, {\n        onLoginSuccess: handleLoginSuccess,\n        PopSignup: handleSignup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }, this) : currentView === 'signup' ? /*#__PURE__*/_jsxDEV(Signup, {\n        LoginSuccess: handleLoginSuccess,\n        closeForm: CloseForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }, this) : null\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"ynE2dYdK5cy+fXT+XvVxB1RYasw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TaskList","TaskAdd","Calendar","Navigation","Welcome","Leaderboard","Login","Signup","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","tasks","setTasks","currentView","setCurrentView","selectedDate","setSelectedDate","Date","isLoggedIn","setIsLoggedIn","username","setUsername","addTask","taskText","trim","id","now","text","completed","date","points","toggleTask","map","task","handleLoginSuccess","children","fileName","_jsxFileName","lineNumber","columnNumber","CloseForm","handleSignup","className","onLoginSuccess","PopSignup","LoginSuccess","closeForm","_c","$RefreshReg$"],"sources":["/Users/treymartin/csc-307-teamApp/CSC-307-TA/packages/frontend/src/App.jsx"],"sourcesContent":["// src/App.jsx\nimport React, { useState } from 'react'\nimport TaskList from './components/TaskList'\nimport TaskAdd from './components/TaskAdd'\nimport Calendar from './components/Calendar'\nimport Navigation from './components/Navigation'\nimport Welcome from './components/Welcome'\nimport Leaderboard from './components/Leaderboard'\nimport Login from './components/Login'\n\nimport './App.css'\nimport Signup from './components/Signup'\n\n/**\n * Main App Component\n * Manages the application state and renders the main UI\n */\nfunction App() {\n    // State management for tasks and UI\n    const [tasks, setTasks] = useState([]) // Stores all tasks\n    const [currentView, setCurrentView] = useState('login') // Controls which view is displayed\n    const [selectedDate, setSelectedDate] = useState(new Date()) // Selected date for calendar\n\n    //Adds a new task to the tasks array\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n    const [username, setUsername] = useState('') // eslint-disable-line no-unused-vars\n\n    const addTask = (taskText) => {\n        if (taskText.trim()) {\n            setTasks([\n                ...tasks,\n                {\n                    id: Date.now(),\n                    text: taskText,\n                    completed: false,\n                    date: selectedDate,\n                    points: 10, // Default points value\n                },\n            ])\n        }\n    }\n\n    /**\n     * Toggles the completion status of a task\n     */\n    const toggleTask = (id) => {\n        setTasks(\n            tasks.map((task) =>\n                task.id === id ? { ...task, completed: !task.completed } : task\n            )\n        )\n    }\n\n    const handleLoginSuccess = () => {\n        setIsLoggedIn(true)\n        setCurrentView('welcome') // Switch to main content on successful login\n        return (\n            <div>\n                <h1>TaskArena</h1>\n                <Navigation\n                    currentView={currentView}\n                    setCurrentView={setCurrentView}\n                />\n                <main>\n                    {currentView === 'welcome' && (\n                        <Welcome\n                            setCurrentView={setCurrentView}\n                            username={username}\n                        />\n                    )}\n                    {currentView === 'tasks' && (\n                        <TaskList\n                            tasks={tasks}\n                            toggleTask={toggleTask}\n                            setCurrentView={setCurrentView}\n                        />\n                    )}\n                    {currentView === 'add' && (\n                        <TaskAdd\n                            addTask={addTask}\n                            setCurrentView={setCurrentView}\n                        />\n                    )}\n                    {currentView === 'calendar' && (\n                        <Calendar\n                            selectedDate={selectedDate}\n                            setSelectedDate={setSelectedDate}\n                        />\n                    )}\n                    {currentView === 'leaderboard' && <Leaderboard />}\n                </main>\n            </div>\n        )\n    }\n    function CloseForm() {\n        setIsLoggedIn(false)\n        setCurrentView('login') // Switch to main content on successful login\n    }\n    function handleSignup() {\n        setCurrentView('signup')\n    }\n    return (\n        <div className=\"app\">\n            {isLoggedIn ? (\n                // Main app content after login\n                <div>\n                    <h1>TaskArena</h1>\n                    <Navigation\n                        currentView={currentView}\n                        setCurrentView={setCurrentView}\n                    />\n                    <main>\n                        {currentView === 'welcome' && (\n                            <Welcome\n                                setCurrentView={setCurrentView}\n                                username={username}\n                            />\n                        )}\n                        {currentView === 'tasks' && (\n                            <TaskList\n                                tasks={tasks}\n                                toggleTask={toggleTask}\n                                setCurrentView={setCurrentView}\n                            />\n                        )}\n                        {currentView === 'add' && (\n                            <TaskAdd\n                                addTask={addTask}\n                                setCurrentView={setCurrentView}\n                            />\n                        )}\n                        {currentView === 'calendar' && (\n                            <Calendar\n                                selectedDate={selectedDate}\n                                setSelectedDate={setSelectedDate}\n                            />\n                        )}\n                        {currentView === 'leaderboard' && <Leaderboard />}\n                    </main>\n                </div>\n            ) : (\n                // Login/Signup forms\n                <>\n                    {currentView === 'login' ? (\n                        <Login\n                            onLoginSuccess={handleLoginSuccess}\n                            PopSignup={handleSignup}\n                        />\n                    ) : currentView === 'signup' ? (\n                        <Signup\n                            LoginSuccess={handleLoginSuccess}\n                            closeForm={CloseForm}\n                        />\n                    ) : null}\n                </>\n            )}\n        </div>\n    )\n}\n\nexport default App\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}